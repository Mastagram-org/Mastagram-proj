version: '3.8'

services:
  mongo:
    image: mongo:7.0
    container_name: mastagram-mongo
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - mastagram-net

  redis:
    image: redis:7.2
    container_name: mastagram-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - mastagram-net

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.0
    container_name: mastagram-elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - xpack.security.transport.ssl.enabled=false
      - xpack.license.self_generated.type=basic
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
    volumes:
      - esdata:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    networks:
      - mastagram-net
    restart: unless-stopped
    ulimits:
      memlock:
        soft: -1
        hard: -1

  kibana:
    image: docker.elastic.co/kibana/kibana:8.13.0
    container_name: mastagram-kibana
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      - elasticsearch
    networks:
      - mastagram-net

  backend:
    build:
      context: ../../backend
      dockerfile: Dockerfile
    container_name: mastagram-backend
    restart: unless-stopped
    env_file:
      - ../../backend/.env
    ports:
      - "5000:5000" 
    depends_on:
      - mongo
      - redis
      - elasticsearch
    networks:
      - mastagram-net

volumes:
  mongo_data:
  redis_data:
  esdata:

networks:
  mastagram-net:
    driver: bridge
